package src.Vector;

import java.util.ArrayList;

/**
 * N-Dimensional Vector
 */
public abstract class Vector<T> {
    private final int mDim;
    protected T[] mElements;

    /**
     * @return Normalised vector
     */
    public abstract void normalise();

    /*Vector
     */
    public abstract void add(final Vector<T> other) throws DimensionException;
    public abstract void sub(final Vector<T> other) throws DimensionException;
    public abstract void mul(final Vector<T> other) throws DimensionException;
    public abstract void div(final Vector<T> other) throws DimensionException, IllegalArgumentException;

    /*Scalar
     */
    public abstract void mul(final T other);
    public abstract void div(final T other);

    /*Concrete impl
    */
    public Vector(T... args)
    {
        mDim = args.length;
        mElements = args;
    }

    public final int getDimension()
    {
        return mDim;
    }

    @Override
    public String toString()
    {
        String result = "[";

        for(T t : mElements)
        {
            result += t.toString() + ", ";
        }

        result += "]";
        return result;
    }
}
